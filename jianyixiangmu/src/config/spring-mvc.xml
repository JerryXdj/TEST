<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
	http://www.springframework.org/schema/cache 
	http://www.springframework.org/schema/cache/spring-cache-3.1.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- 1注解扫描包 -->
	<context:component-scan base-package="com" />
	<!-- 2开启注解 -->
	<mvc:annotation-driven />
	<!-- 3. 事务管理 : DataSourceTransactionManager dataSource:引用上面定义的数据源 -->
	<!-- <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
 	-->	
 <!-- 4. 使用声明式事务 transaction-manager：引用上面定义的事务管理器 -->
	<!-- <tx:annotation-driven transaction-manager="txManager" /> -->

	<!-- 5 装配拦截器 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			
			<mvc:exclude-mapping path="/static/**" />
			<bean id="myInterceptors" class="com.tool.MyInterceptors"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
 
	<!-- 6配置静态资源，直接映射到对应的文件夹，不被DispatcherServlet处理，3.04新增功能 -->
	<mvc:resources mapping="/js/**" location="/js/" />
	<mvc:resources mapping="/images/**" location="/images/" />
	<mvc:resources mapping="/css/**" location="/css/" />
	


	<!-- 7 定义跳转的文件的前后缀 ，视图模式配置 -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

</beans>
